import{_ as u}from"./cover-BadZ7aH7.js";import{_ as i,c as s,a as o,b as d,d as e,w as n,e as l,r as a,o as h}from"./app-Cl7lX8oh.js";const m={};function p(f,t){const r=a("RouteLink");return h(),s("div",null,[t[32]||(t[32]=o('<h1 id="簡介" tabindex="-1"><a class="header-anchor" href="#簡介"><span>簡介</span></a></h1><img src="'+u+'" style="width:28%;"><p>這是一本關於軟體設計的書（英文原名：A Philosophy of Software Design）：如何將複雜的軟體系統分解成模組（比如類和方法），以便這些模組可以相對獨立地實現。本書首先介紹了軟體設計的基本問題，也就是對複雜性的管理，然後討論了一些在完成軟體設計的過程中涉及到的哲學問題，並提出了一系列可以在軟體設計過程中應用的設計原則。本書還介紹了一些可用來識別設計問題的危險訊號。你可以透過應用本書中的想法來減少大型軟體系統的複雜性，以便能更快和更低成本地編寫軟體。</p><h2 id="目錄" tabindex="-1"><a class="header-anchor" href="#目錄"><span>目錄</span></a></h2>',4)),d("ul",null,[d("li",null,[e(r,{to:"/zh-tw/preface.html"},{default:n(()=>t[0]||(t[0]=[l("前言")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch01.html"},{default:n(()=>t[1]||(t[1]=[l("第 1 章 介紹")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch02.html"},{default:n(()=>t[2]||(t[2]=[l("第 2 章 複雜性的本質")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch03.html"},{default:n(()=>t[3]||(t[3]=[l("第 3 章 能工作的程式碼是不夠的")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch04.html"},{default:n(()=>t[4]||(t[4]=[l("第 4 章 模組應該是深的")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch05.html"},{default:n(()=>t[5]||(t[5]=[l("第 5 章 資訊隱藏和資訊洩露")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch06.html"},{default:n(()=>t[6]||(t[6]=[l("第 6 章 通用的模組是更深的")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch07.html"},{default:n(()=>t[7]||(t[7]=[l("第 7 章 不同的層級，不同的抽象")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch08.html"},{default:n(()=>t[8]||(t[8]=[l("第 8 章 下沉複雜性")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch09.html"},{default:n(()=>t[9]||(t[9]=[l("第 9 章 在一起更好還是分開更好？")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch10.html"},{default:n(()=>t[10]||(t[10]=[l("第 10 章 透過定義來規避錯誤")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch11.html"},{default:n(()=>t[11]||(t[11]=[l("第 11 章 設計兩次")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch12.html"},{default:n(()=>t[12]||(t[12]=[l("第 12 章 不寫註釋的四個藉口")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch13.html"},{default:n(()=>t[13]||(t[13]=[l("第 13 章 註釋應該描述程式碼中難以理解的內容")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch14.html"},{default:n(()=>t[14]||(t[14]=[l("第 14 章 選取名稱")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch15.html"},{default:n(()=>t[15]||(t[15]=[l("第 15 章 先寫註釋")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch16.html"},{default:n(()=>t[16]||(t[16]=[l("第 16 章 修改現有的程式碼")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch17.html"},{default:n(()=>t[17]||(t[17]=[l("第 17 章 一致性")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch18.html"},{default:n(()=>t[18]||(t[18]=[l("第 18 章 程式碼應該是易理解的")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch19.html"},{default:n(()=>t[19]||(t[19]=[l("第 19 章 軟體發展趨勢")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch20.html"},{default:n(()=>t[20]||(t[20]=[l("第 20 章 效能設計")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch21.html"},{default:n(()=>t[21]||(t[21]=[l("第 21 章 決定什麼是重要的")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/ch22.html"},{default:n(()=>t[22]||(t[22]=[l("第 22 章 結論")])),_:1})]),d("li",null,[e(r,{to:"/zh-tw/summary.html"},{default:n(()=>t[23]||(t[23]=[l("總結")])),_:1})])]),t[33]||(t[33]=o('<h2 id="翻譯說明" tabindex="-1"><a class="header-anchor" href="#翻譯說明"><span>翻譯說明</span></a></h2><p>原書第二版相對於第一版的內容變更不多，此翻譯版本是在<a href="https://github.com/yingang/aposd-zh" target="_blank" rel="noopener noreferrer">原書第一版翻譯</a>的基礎上增量更新而來的，而後者的歷史可參見其<a href="https://github.com/yingang/aposd-zh/tree/main/docs#%E7%BF%BB%E8%AF%91%E8%AF%B4%E6%98%8E" target="_blank" rel="noopener noreferrer">翻譯說明</a>。</p><p>第二版的主要變更如下，翻譯自<a href="https://web.stanford.edu/~ouster/cgi-bin/book.php" target="_blank" rel="noopener noreferrer">原作者網站的說明</a>：</p>',3)),d("ul",null,[d("li",null,[e(r,{to:"/zh-tw/ch06.html"},{default:n(()=>t[24]||(t[24]=[l("第 6 章")])),_:1}),t[25]||(t[25]=l("（“通用的模組是更深的”）的內容有相對較多的更新。作者自述在第一版出版後，對選擇通用設計的重要性有了更清晰的認識。第 6 章同時也吸收了第一版中第 9.7 節和第 10.9 節的內容。"))]),d("li",null,[e(r,{to:"/zh-tw/ch09.html"},{default:n(()=>t[26]||(t[26]=[l("第 9 章")])),_:1}),t[28]||(t[28]=l("和")),e(r,{to:"/zh-tw/ch12.html"},{default:n(()=>t[27]||(t[27]=[l("第 12 章")])),_:1}),t[29]||(t[29]=l("增加了一些內容，主要對比了 Robert Martin 所著《程式碼整潔之道》中的設計哲學。作者自述在諸如方法的長度和註釋的作用等方面與對方的觀點有顯著的分歧。"))]),d("li",null,[e(r,{to:"/zh-tw/ch21.html"},{default:n(()=>t[30]||(t[30]=[l("第 21 章")])),_:1}),t[31]||(t[31]=l("（“決定什麼是重要的”）是新增的章節，主要介紹好的軟體設計如何將重要的事情和不重要的事情區分開，並更多關注在重要的事情上。"))])]),t[34]||(t[34]=o('<p>如果你在閱讀過程中，發現有翻譯不當的地方，或者有其他建議，歡迎提交相應的 PR 或 Issue。</p><p>另外，繁體中文的翻譯版本是基於 <code>opencc</code> 使用 Python 指令碼自動生成的，如果發現有處理不當的內容，請針對該指令碼或對應的簡體中文內容提交 PR 或 Issue。而英文部分則類似於第一版翻譯，出於尊重原作版權的考慮，刪除了主體部分的內容，只保留了前言、各個章節的概要和總結以及原書第二版相對第一版新增或變更的內容（提取自<a href="https://web.stanford.edu/~ouster/cgi-bin/aposd2ndEdExtract.pdf" target="_blank" rel="noopener noreferrer">原作者網站上開放下載的相關章節</a>）。</p><h2 id="術語翻譯" tabindex="-1"><a class="header-anchor" href="#術語翻譯"><span>術語翻譯</span></a></h2><p>翻譯是個比較困難的事情，除了譯者水平有限，也有很多見仁見智的地方，所以這裡先列出一些術語的翻譯選擇和背後的考慮因素，以供參考，並至少在本書籍的翻譯過程中保持相對統一，也歡迎提 Issue 探討。</p><table><thead><tr><th>英文</th><th>中文</th><th>說明</th></tr></thead><tbody><tr><td>bug</td><td>缺陷 / 程式碼缺陷</td><td>沒有用“錯誤”是希望避免與 error 等術語的翻譯混淆</td></tr><tr><td>change</td><td>變更</td><td>針對程式碼的時候，更多使用“變更”而不是“改變”，但根據實際的上下文而定</td></tr><tr><td>clean</td><td>整潔的</td><td>與《程式碼整潔之道》等系列書籍的翻譯保持一致</td></tr><tr><td>complexity</td><td>複雜性</td><td>沒有用“複雜度”，類似的還有“依賴性（dependency）”和“模糊性（obscurity）”</td></tr><tr><td>deep module / class</td><td>深模組 / 深類</td><td>沒有用“深層的”是希望避免與 layer 和 level 等術語的翻譯混淆</td></tr><tr><td>dispatcher</td><td>分發器</td><td>沒有用“排程器”是希望避免與 scheduler 等術語的翻譯混淆</td></tr><tr><td>information leakage</td><td>資訊洩露</td><td>沒有用“洩漏”</td></tr><tr><td>obvious</td><td>易理解的</td><td>在描述程式碼的特性時一般會譯為“易理解的”（主要是第 13 章和第 18 章），反之就是“難以理解的”，而其他場景下可能仍譯為“明顯的”或“顯而易見的”</td></tr><tr><td>pass-through</td><td>透傳</td><td>用於“透傳方法”、“透傳變數”、“透傳引數”等場景</td></tr><tr><td>public method / variables</td><td>公有方法 / 公有變數</td><td>沒有用“公開”是希望避免與 expose 和 exposure 等術語的翻譯混淆</td></tr><tr><td>selection</td><td>區域選擇 / 選擇的區域 / 所選區域</td><td>影像介面文字編譯器中的示例，直接翻譯成“選擇”會不太清晰</td></tr><tr><td>shallow module / class</td><td>淺模組 / 淺類</td><td>沒有用“淺層的”，和 deep 的翻譯選擇是同樣的原因</td></tr><tr><td>web browser / server</td><td>Web 瀏覽器 / Web 伺服器</td><td>沒有用“網路”或“網頁”是希望避免與 network 和 web page 等術語的翻譯混淆，就保留英文了</td></tr></tbody></table>',5))])}const g=i(m,[["render",p]]),z=JSON.parse('{"path":"/zh-tw/","title":"簡介","lang":"zh-TW","frontmatter":{},"git":{"updatedTime":1747185858000,"contributors":[{"name":"yingang","username":"yingang","email":"1246410+yingang@users.noreply.github.com","commits":1,"url":"https://github.com/yingang"}],"changelog":[{"hash":"877d4cd470c60b73ff0db48f7c7f83fb0ee8fd61","time":1747185858000,"email":"1246410+yingang@users.noreply.github.com","author":"Gang Yin","message":"fix repo name"}]},"filePathRelative":"zh-tw/README.md"}');export{g as comp,z as data};
